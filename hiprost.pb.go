// This file defines the hierarchical protocol object storage (Hiprost) service.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.2
// source: hiprost.proto

package hiprost

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Type describes the type of error.
type Error_Type int32

const (
	// NONE means no error.
	Error_NONE Error_Type = 0
	// BACKEND means the storage backend reported an error.
	Error_BACKEND Error_Type = 1
	// NOT_EQUAL means that the equality check in PutObject or DeleteObject
	// failed.
	Error_NOT_EQUAL Error_Type = 2
	// NOT_FOUND means that an object could not be found at the specified
	// address.
	Error_NOT_FOUND Error_Type = 3
	// TYPE_MISSING means that an object type could not be inferred.
	Error_TYPE_MISSING Error_Type = 4
)

// Enum value maps for Error_Type.
var (
	Error_Type_name = map[int32]string{
		0: "NONE",
		1: "BACKEND",
		2: "NOT_EQUAL",
		3: "NOT_FOUND",
		4: "TYPE_MISSING",
	}
	Error_Type_value = map[string]int32{
		"NONE":         0,
		"BACKEND":      1,
		"NOT_EQUAL":    2,
		"NOT_FOUND":    3,
		"TYPE_MISSING": 4,
	}
)

func (x Error_Type) Enum() *Error_Type {
	p := new(Error_Type)
	*p = x
	return p
}

func (x Error_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Error_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_hiprost_proto_enumTypes[0].Descriptor()
}

func (Error_Type) Type() protoreflect.EnumType {
	return &file_hiprost_proto_enumTypes[0]
}

func (x Error_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Error_Type.Descriptor instead.
func (Error_Type) EnumDescriptor() ([]byte, []int) {
	return file_hiprost_proto_rawDescGZIP(), []int{12, 0}
}

// PutObjectRequest is the PutObject RPC request message.
type PutObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address is the address of the object to be updated or created. Required.
	Address *Address `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// object is the object to update or create at address. Required.
	// For updates, if object does not have type information, the same type as
	// the existing object will be assumed.
	Object *Object `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	// no_create forbids creation of new objects, only updates are allowed.
	NoCreate bool `protobuf:"varint,3,opt,name=no_create,json=noCreate,proto3" json:"no_create,omitempty"`
	// old_object controls whether an existing object will be updated. If present,
	// the object at address must match old_object. If old_object does not have
	// type information, it will be assumed that the types match. If there is no
	// object at address, it will be created regardless of the contents of
	// old_object, unless no_create is also set.
	OldObject *Object `protobuf:"bytes,4,opt,name=old_object,json=oldObject,proto3" json:"old_object,omitempty"`
}

func (x *PutObjectRequest) Reset() {
	*x = PutObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiprost_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutObjectRequest) ProtoMessage() {}

func (x *PutObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiprost_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutObjectRequest.ProtoReflect.Descriptor instead.
func (*PutObjectRequest) Descriptor() ([]byte, []int) {
	return file_hiprost_proto_rawDescGZIP(), []int{0}
}

func (x *PutObjectRequest) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *PutObjectRequest) GetObject() *Object {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *PutObjectRequest) GetNoCreate() bool {
	if x != nil {
		return x.NoCreate
	}
	return false
}

func (x *PutObjectRequest) GetOldObject() *Object {
	if x != nil {
		return x.OldObject
	}
	return nil
}

// PutObjectResponse is the PutObject RPC response message.
type PutObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// error describes the error which occurred during the PutObject RPC.
	// Present if and only if an error occurred.
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// created indicates whether the object was created (as opposed to updated).
	Created bool `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *PutObjectResponse) Reset() {
	*x = PutObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiprost_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutObjectResponse) ProtoMessage() {}

func (x *PutObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hiprost_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutObjectResponse.ProtoReflect.Descriptor instead.
func (*PutObjectResponse) Descriptor() ([]byte, []int) {
	return file_hiprost_proto_rawDescGZIP(), []int{1}
}

func (x *PutObjectResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *PutObjectResponse) GetCreated() bool {
	if x != nil {
		return x.Created
	}
	return false
}

// GetObjectRequest is the GetObject RPC request message.
type GetObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address is the address of the requested object. Required.
	Address *Address `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// missing_ok indicates that the RPC should not fail if there is no object
	// at the specified address. If set, GetObjectResponse will simply be empty
	// if the object is missing and the call was otherwise successful.
	MissingOk bool `protobuf:"varint,2,opt,name=missing_ok,json=missingOk,proto3" json:"missing_ok,omitempty"`
}

func (x *GetObjectRequest) Reset() {
	*x = GetObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiprost_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectRequest) ProtoMessage() {}

func (x *GetObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiprost_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectRequest.ProtoReflect.Descriptor instead.
func (*GetObjectRequest) Descriptor() ([]byte, []int) {
	return file_hiprost_proto_rawDescGZIP(), []int{2}
}

func (x *GetObjectRequest) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *GetObjectRequest) GetMissingOk() bool {
	if x != nil {
		return x.MissingOk
	}
	return false
}

// GetObjectResponse is the GetObject RPC response message.
type GetObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// error describes the error which occurred during the GetObject RPC.
	// Present if and only if an error occurred.
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// object is the requested object. May be omitted if an error occurred.
	Object *Object `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *GetObjectResponse) Reset() {
	*x = GetObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiprost_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectResponse) ProtoMessage() {}

func (x *GetObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hiprost_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectResponse.ProtoReflect.Descriptor instead.
func (*GetObjectResponse) Descriptor() ([]byte, []int) {
	return file_hiprost_proto_rawDescGZIP(), []int{3}
}

func (x *GetObjectResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetObjectResponse) GetObject() *Object {
	if x != nil {
		return x.Object
	}
	return nil
}

// DeleteObjectRequest is the DeleteObject RPC request message.
type DeleteObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address is the address of the object to be deleted. Required.
	// If no object exists at the specified address, no operation is performed
	// unless fail_if_missing is true, in which case an error will be raised.
	Address *Address `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// fail_if_missing indicates the attempt to delete a missing object should
	// be treated as an error.
	FailIfMissing bool `protobuf:"varint,2,opt,name=fail_if_missing,json=failIfMissing,proto3" json:"fail_if_missing,omitempty"`
	// old_object controls whether an existing object will be deleted. If present,
	// the object at address must match old_object. If old_object does not have
	// type information, it will be assumed that the types match. If there is no
	// object at address, no error will be raised regardless of the contents of
	// old_object, unless fail_if_missing is also set.
	OldObject *Object `protobuf:"bytes,3,opt,name=old_object,json=oldObject,proto3" json:"old_object,omitempty"`
}

func (x *DeleteObjectRequest) Reset() {
	*x = DeleteObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiprost_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteObjectRequest) ProtoMessage() {}

func (x *DeleteObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiprost_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteObjectRequest.ProtoReflect.Descriptor instead.
func (*DeleteObjectRequest) Descriptor() ([]byte, []int) {
	return file_hiprost_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteObjectRequest) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *DeleteObjectRequest) GetFailIfMissing() bool {
	if x != nil {
		return x.FailIfMissing
	}
	return false
}

func (x *DeleteObjectRequest) GetOldObject() *Object {
	if x != nil {
		return x.OldObject
	}
	return nil
}

// DeleteObjectResponse is the DeleteObject RPC response message.
type DeleteObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// error describes the error which occurred during the DeleteObject RPC.
	// Present if and only if an error occurred.
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// missing indicates the object was missing and thus no actual deletion
	// occurred.
	Missing bool `protobuf:"varint,2,opt,name=missing,proto3" json:"missing,omitempty"`
}

func (x *DeleteObjectResponse) Reset() {
	*x = DeleteObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiprost_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteObjectResponse) ProtoMessage() {}

func (x *DeleteObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hiprost_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteObjectResponse.ProtoReflect.Descriptor instead.
func (*DeleteObjectResponse) Descriptor() ([]byte, []int) {
	return file_hiprost_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteObjectResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *DeleteObjectResponse) GetMissing() bool {
	if x != nil {
		return x.Missing
	}
	return false
}

// ListObjectsRequest is the ListObjects RPC request message.
type ListObjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// hierarchy is the hierarchy for which objects should be listed. Required.
	// This requests to list all objects for which the components of hierarchy
	// is an initial segment of their address.
	Hierarchy *Address `protobuf:"bytes,1,opt,name=hierarchy,proto3" json:"hierarchy,omitempty"`
}

func (x *ListObjectsRequest) Reset() {
	*x = ListObjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiprost_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectsRequest) ProtoMessage() {}

func (x *ListObjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiprost_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectsRequest.ProtoReflect.Descriptor instead.
func (*ListObjectsRequest) Descriptor() ([]byte, []int) {
	return file_hiprost_proto_rawDescGZIP(), []int{6}
}

func (x *ListObjectsRequest) GetHierarchy() *Address {
	if x != nil {
		return x.Hierarchy
	}
	return nil
}

// ListObjectsResponse is the ListObjects RPC response message.
type ListObjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// error describes the error which occurred during the ListObjects RPC.
	// Present if and only if an error occurred.
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// addresses is the list of addresses of all objects within the requested
	// hierarchy. May be empty.
	Addresses []*Address `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *ListObjectsResponse) Reset() {
	*x = ListObjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiprost_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectsResponse) ProtoMessage() {}

func (x *ListObjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hiprost_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectsResponse.ProtoReflect.Descriptor instead.
func (*ListObjectsResponse) Descriptor() ([]byte, []int) {
	return file_hiprost_proto_rawDescGZIP(), []int{7}
}

func (x *ListObjectsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ListObjectsResponse) GetAddresses() []*Address {
	if x != nil {
		return x.Addresses
	}
	return nil
}

// WatchObjectsRequest is the WatchObjects RPC request message.
type WatchObjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// hierarchies is the list of hierarchies to watch. Required. Must be
	// prefix-free (in particular, no duplicates).
	Hierarchies []*Address `protobuf:"bytes,1,rep,name=hierarchies,proto3" json:"hierarchies,omitempty"`
	// interrogate specifies that the initial object values should be sent.
	// The default is send only on update.
	Interrogate bool `protobuf:"varint,2,opt,name=interrogate,proto3" json:"interrogate,omitempty"`
	// changed_only specifies that only object changes should be watched. Updates
	// which do not change the object are ignored. interrogate is not affected by
	// changed_only. Object creation and deletion of an existing object count as
	// a change. The server may send unchanged objects anyway if its storage
	// backend is unable to distinguish changing from non-changing updates.
	ChangedOnly bool `protobuf:"varint,3,opt,name=changed_only,json=changedOnly,proto3" json:"changed_only,omitempty"`
}

func (x *WatchObjectsRequest) Reset() {
	*x = WatchObjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiprost_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchObjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchObjectsRequest) ProtoMessage() {}

func (x *WatchObjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hiprost_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchObjectsRequest.ProtoReflect.Descriptor instead.
func (*WatchObjectsRequest) Descriptor() ([]byte, []int) {
	return file_hiprost_proto_rawDescGZIP(), []int{8}
}

func (x *WatchObjectsRequest) GetHierarchies() []*Address {
	if x != nil {
		return x.Hierarchies
	}
	return nil
}

func (x *WatchObjectsRequest) GetInterrogate() bool {
	if x != nil {
		return x.Interrogate
	}
	return false
}

func (x *WatchObjectsRequest) GetChangedOnly() bool {
	if x != nil {
		return x.ChangedOnly
	}
	return false
}

// WatchObjectsResponse describes a WatchObjects RPC response message.
type WatchObjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// error describes the error which occurred during the WatchObjects RPC.
	// Present if and only if an error occurred. If present, this will be the last
	// response message. The server will close the stream afterwards.
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// address is the address of an updated object. Required unless an error
	// occurred or the previous response used the same address.
	Address *Address `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// object is the updated object. Required unless an error occurred or the
	// object at address has just been deleted. The type field of object will be
	// empty if the immediately preceding WatchObjectsResponse with the same
	// address had the same type. If this is the case, the data field will
	// likewise be omitted if the immediately preceding WatchObjectsResponse with
	// the same address had the exact same data.
	Object *Object `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
	// created indicates the object at address has just been created.
	Created bool `protobuf:"varint,4,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *WatchObjectsResponse) Reset() {
	*x = WatchObjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiprost_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchObjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchObjectsResponse) ProtoMessage() {}

func (x *WatchObjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hiprost_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchObjectsResponse.ProtoReflect.Descriptor instead.
func (*WatchObjectsResponse) Descriptor() ([]byte, []int) {
	return file_hiprost_proto_rawDescGZIP(), []int{9}
}

func (x *WatchObjectsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *WatchObjectsResponse) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *WatchObjectsResponse) GetObject() *Object {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *WatchObjectsResponse) GetCreated() bool {
	if x != nil {
		return x.Created
	}
	return false
}

// Address describes an object address.
// Addresses also define hierarchies.
type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// components are the address components.
	// If components is omitted, the Address corresponds to the root of the
	// hierarchy.
	Components []string `protobuf:"bytes,1,rep,name=components,proto3" json:"components,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiprost_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_hiprost_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_hiprost_proto_rawDescGZIP(), []int{10}
}

func (x *Address) GetComponents() []string {
	if x != nil {
		return x.Components
	}
	return nil
}

// Object describes an object.
type Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// type is the object type.
	// The object type is determined by the application and can be any non-empty
	// string. The Hiprost service will not attempt to interpret the object type.
	// Often, the type can be inferred from the context, in which case it can be
	// omitted.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// data is the object data. Two objects are considered equal if both their
	// types and data are equal.
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Object) Reset() {
	*x = Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiprost_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Object) ProtoMessage() {}

func (x *Object) ProtoReflect() protoreflect.Message {
	mi := &file_hiprost_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Object.ProtoReflect.Descriptor instead.
func (*Object) Descriptor() ([]byte, []int) {
	return file_hiprost_proto_rawDescGZIP(), []int{11}
}

func (x *Object) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Object) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Error describes an error.
type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type is the type of this error.
	Type Error_Type `protobuf:"varint,1,opt,name=type,proto3,enum=com.github.thecount.hiprost.Error_Type" json:"type,omitempty"`
	// msg is an optional error message.
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hiprost_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_hiprost_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_hiprost_proto_rawDescGZIP(), []int{12}
}

func (x *Error) GetType() Error_Type {
	if x != nil {
		return x.Type
	}
	return Error_NONE
}

func (x *Error) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_hiprost_proto protoreflect.FileDescriptor

var file_hiprost_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x74, 0x68, 0x65, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74, 0x22, 0xf0, 0x01, 0x0a,
	0x10, 0x50, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3e, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x74, 0x68, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x3b, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x74,
	0x68, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6e, 0x6f, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x6e, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x6f,
	0x6c, 0x64, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x74, 0x68, 0x65,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0x67, 0x0a, 0x11, 0x50, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x74, 0x68, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73,
	0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x71, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x74, 0x68, 0x65, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x4f, 0x6b, 0x22, 0x8a, 0x01, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x74, 0x68,
	0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x74, 0x68, 0x65, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3e, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x74,
	0x68, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x66, 0x5f, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x49,
	0x66, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x42, 0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x74, 0x68, 0x65, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x6a, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x74, 0x68, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73,
	0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x22, 0x58, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42,
	0x0a, 0x09, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x74,
	0x68, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63,
	0x68, 0x79, 0x22, 0x93, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x74, 0x68, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x74, 0x68, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69,
	0x70, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x13, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x46, 0x0a, 0x0b, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x74, 0x68, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72,
	0x6f, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0b, 0x68, 0x69, 0x65,
	0x72, 0x61, 0x72, 0x63, 0x68, 0x69, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x72, 0x6f, 0x67, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x72, 0x6f, 0x67, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0xe7, 0x01,
	0x0a, 0x14, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x74, 0x68, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72,
	0x6f, 0x73, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x3e, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x74,
	0x68, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x3b, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x74, 0x68,
	0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x29, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0x30, 0x0a, 0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xa5, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3b,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x74, 0x68, 0x65, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x4d, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x42, 0x41, 0x43, 0x4b, 0x45, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x32, 0xbf, 0x04, 0x0a,
	0x07, 0x48, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74, 0x12, 0x6a, 0x0a, 0x09, 0x50, 0x75, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x74, 0x68, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72,
	0x6f, 0x73, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x74, 0x68, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f,
	0x73, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x74,
	0x68, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x74, 0x68,
	0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x73, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x74, 0x68,
	0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x74, 0x68, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x74, 0x68, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72, 0x6f,
	0x73, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x74, 0x68, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69, 0x70, 0x72,
	0x6f, 0x73, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x0c, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x74, 0x68, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x68, 0x69,
	0x70, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x74, 0x68, 0x65, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x1d,
	0x5a, 0x1b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x68, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x68, 0x69, 0x70, 0x72, 0x6f, 0x73, 0x74, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hiprost_proto_rawDescOnce sync.Once
	file_hiprost_proto_rawDescData = file_hiprost_proto_rawDesc
)

func file_hiprost_proto_rawDescGZIP() []byte {
	file_hiprost_proto_rawDescOnce.Do(func() {
		file_hiprost_proto_rawDescData = protoimpl.X.CompressGZIP(file_hiprost_proto_rawDescData)
	})
	return file_hiprost_proto_rawDescData
}

var file_hiprost_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_hiprost_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_hiprost_proto_goTypes = []interface{}{
	(Error_Type)(0),              // 0: com.github.thecount.hiprost.Error.Type
	(*PutObjectRequest)(nil),     // 1: com.github.thecount.hiprost.PutObjectRequest
	(*PutObjectResponse)(nil),    // 2: com.github.thecount.hiprost.PutObjectResponse
	(*GetObjectRequest)(nil),     // 3: com.github.thecount.hiprost.GetObjectRequest
	(*GetObjectResponse)(nil),    // 4: com.github.thecount.hiprost.GetObjectResponse
	(*DeleteObjectRequest)(nil),  // 5: com.github.thecount.hiprost.DeleteObjectRequest
	(*DeleteObjectResponse)(nil), // 6: com.github.thecount.hiprost.DeleteObjectResponse
	(*ListObjectsRequest)(nil),   // 7: com.github.thecount.hiprost.ListObjectsRequest
	(*ListObjectsResponse)(nil),  // 8: com.github.thecount.hiprost.ListObjectsResponse
	(*WatchObjectsRequest)(nil),  // 9: com.github.thecount.hiprost.WatchObjectsRequest
	(*WatchObjectsResponse)(nil), // 10: com.github.thecount.hiprost.WatchObjectsResponse
	(*Address)(nil),              // 11: com.github.thecount.hiprost.Address
	(*Object)(nil),               // 12: com.github.thecount.hiprost.Object
	(*Error)(nil),                // 13: com.github.thecount.hiprost.Error
}
var file_hiprost_proto_depIdxs = []int32{
	11, // 0: com.github.thecount.hiprost.PutObjectRequest.address:type_name -> com.github.thecount.hiprost.Address
	12, // 1: com.github.thecount.hiprost.PutObjectRequest.object:type_name -> com.github.thecount.hiprost.Object
	12, // 2: com.github.thecount.hiprost.PutObjectRequest.old_object:type_name -> com.github.thecount.hiprost.Object
	13, // 3: com.github.thecount.hiprost.PutObjectResponse.error:type_name -> com.github.thecount.hiprost.Error
	11, // 4: com.github.thecount.hiprost.GetObjectRequest.address:type_name -> com.github.thecount.hiprost.Address
	13, // 5: com.github.thecount.hiprost.GetObjectResponse.error:type_name -> com.github.thecount.hiprost.Error
	12, // 6: com.github.thecount.hiprost.GetObjectResponse.object:type_name -> com.github.thecount.hiprost.Object
	11, // 7: com.github.thecount.hiprost.DeleteObjectRequest.address:type_name -> com.github.thecount.hiprost.Address
	12, // 8: com.github.thecount.hiprost.DeleteObjectRequest.old_object:type_name -> com.github.thecount.hiprost.Object
	13, // 9: com.github.thecount.hiprost.DeleteObjectResponse.error:type_name -> com.github.thecount.hiprost.Error
	11, // 10: com.github.thecount.hiprost.ListObjectsRequest.hierarchy:type_name -> com.github.thecount.hiprost.Address
	13, // 11: com.github.thecount.hiprost.ListObjectsResponse.error:type_name -> com.github.thecount.hiprost.Error
	11, // 12: com.github.thecount.hiprost.ListObjectsResponse.addresses:type_name -> com.github.thecount.hiprost.Address
	11, // 13: com.github.thecount.hiprost.WatchObjectsRequest.hierarchies:type_name -> com.github.thecount.hiprost.Address
	13, // 14: com.github.thecount.hiprost.WatchObjectsResponse.error:type_name -> com.github.thecount.hiprost.Error
	11, // 15: com.github.thecount.hiprost.WatchObjectsResponse.address:type_name -> com.github.thecount.hiprost.Address
	12, // 16: com.github.thecount.hiprost.WatchObjectsResponse.object:type_name -> com.github.thecount.hiprost.Object
	0,  // 17: com.github.thecount.hiprost.Error.type:type_name -> com.github.thecount.hiprost.Error.Type
	1,  // 18: com.github.thecount.hiprost.Hiprost.PutObject:input_type -> com.github.thecount.hiprost.PutObjectRequest
	3,  // 19: com.github.thecount.hiprost.Hiprost.GetObject:input_type -> com.github.thecount.hiprost.GetObjectRequest
	5,  // 20: com.github.thecount.hiprost.Hiprost.DeleteObject:input_type -> com.github.thecount.hiprost.DeleteObjectRequest
	7,  // 21: com.github.thecount.hiprost.Hiprost.ListObjects:input_type -> com.github.thecount.hiprost.ListObjectsRequest
	9,  // 22: com.github.thecount.hiprost.Hiprost.WatchObjects:input_type -> com.github.thecount.hiprost.WatchObjectsRequest
	2,  // 23: com.github.thecount.hiprost.Hiprost.PutObject:output_type -> com.github.thecount.hiprost.PutObjectResponse
	4,  // 24: com.github.thecount.hiprost.Hiprost.GetObject:output_type -> com.github.thecount.hiprost.GetObjectResponse
	6,  // 25: com.github.thecount.hiprost.Hiprost.DeleteObject:output_type -> com.github.thecount.hiprost.DeleteObjectResponse
	8,  // 26: com.github.thecount.hiprost.Hiprost.ListObjects:output_type -> com.github.thecount.hiprost.ListObjectsResponse
	10, // 27: com.github.thecount.hiprost.Hiprost.WatchObjects:output_type -> com.github.thecount.hiprost.WatchObjectsResponse
	23, // [23:28] is the sub-list for method output_type
	18, // [18:23] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_hiprost_proto_init() }
func file_hiprost_proto_init() {
	if File_hiprost_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hiprost_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiprost_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiprost_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiprost_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiprost_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiprost_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiprost_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiprost_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiprost_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchObjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiprost_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchObjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiprost_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiprost_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hiprost_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hiprost_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hiprost_proto_goTypes,
		DependencyIndexes: file_hiprost_proto_depIdxs,
		EnumInfos:         file_hiprost_proto_enumTypes,
		MessageInfos:      file_hiprost_proto_msgTypes,
	}.Build()
	File_hiprost_proto = out.File
	file_hiprost_proto_rawDesc = nil
	file_hiprost_proto_goTypes = nil
	file_hiprost_proto_depIdxs = nil
}
